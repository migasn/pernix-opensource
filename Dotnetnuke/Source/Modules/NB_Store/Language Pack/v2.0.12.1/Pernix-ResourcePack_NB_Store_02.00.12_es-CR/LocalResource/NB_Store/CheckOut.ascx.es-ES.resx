<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cmdOrder.Text" xml:space="preserve">
    <value>Orden</value>
  </data>
  <data name="Select.Text" xml:space="preserve">
    <value>-Seleccionar-</value>
  </data>
  <data name="lblOrderTotal.Text" xml:space="preserve">
    <value>Total Orden:</value>
  </data>
  <data name="plVATCode.Text" xml:space="preserve">
    <value>Numero de VAT</value>
  </data>
  <data name="plVATCode.Help" xml:space="preserve">
    <value>No aplica para CR</value>
  </data>
  <data name="lblVATNumber.Text" xml:space="preserve">
    <value>No aplica para CR</value>
  </data>
  <data name="plShipCountry1.Text" xml:space="preserve">
    <value>Pais de envio</value>
  </data>
  <data name="plShipCountry1.Help" xml:space="preserve">
    <value>Pais al que se realizara el envio.</value>
  </data>
  <data name="cmdPromo.Text" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="cmdRefresh.Text" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="plPromoCode.Text" xml:space="preserve">
    <value>Codigo Promocion</value>
  </data>
  <data name="plPromoCode.Help" xml:space="preserve">
    <value>Ingrese el codigo de la promocion para procesar el descuento.</value>
  </data>
  <data name="LoginText.Text" xml:space="preserve">
    <value>Se debe de ingresar el sistema para hacer la orden.</value>
  </data>
  <data name="EmptyCart.Text" xml:space="preserve">
    <value>Carrito vacio.</value>
  </data>
  <data name="lblBillAddress.Text">
    <value>Direccion para Factura</value>
  </data>
  <data name="lblBillingAddressTitle.Text">
    <value>Direccion Factura</value>
  </data>
  <data name="lblShippingAddressTitle.Text">
    <value>Direccion Envio</value>
  </data>
  <data name="lblShippingAddressTitle.Help">
    <value>Direccion a la que se va a enviar los productos.</value>
  </data>
  <data name="lblBillingAddressTitle.Help">
    <value>Direccion a la que se va a enviar la factura.</value>
  </data>
  <data name="lblUseBillingAddress.Text">
    <value>Enviar la orden a la direccion factura.</value>
  </data>
  <data name="lblUseShippingAddress.Text">
    <value>Separa direccion de envio.</value>
  </data>
  <data name="lblNone.Text">
    <value>Sin envio</value>
  </data>
  <data name="lblNone.Help">
    <value>Esta orden no require envio o no se debe de enviar.</value>
  </data>
  <data name="lblShipAddress.Text">
    <value>Direccion de envio</value>
  </data>
  <data name="SelectShippingAddress.Text">
    <value>Seleccionar direccion de envio</value>
  </data>
  <data name="lblShipAddressOptions.Text">
    <value>Opciones de direccion de envio</value>
  </data>
  <data name="lblShipAddressOptions.Help">
    <value>Estas opciones determinan la direccion de envio</value>
  </data>
  <data name="lblShipAddress.Help">
    <value>Ingrese la direccion de envio</value>
  </data>
  <data name="lblUseBillingAddress.Help">
    <value>Ingrese la direccion a la que se enviara la factura</value>
  </data>
  <data name="lblUseShippingAddress.Help">
    <value>Seleccione una direccion a ser utilizada como direccion de envio</value>
  </data>
  <data name="lblBillAddress.Help">
    <value>Ingrese direccion de factura</value>
  </data>
  <data name="plStreet.Text">
    <value>Otras senas:</value>
  </data>
  <data name="plStreet.Help">
    <value>Ingrese informacion detallada de su direccion</value>
  </data>
  <data name="plCity.Text">
    <value>Canton:</value>
  </data>
  <data name="plCity.Help">
    <value>Ingrese la canton</value>
  </data>
  <data name="plCountry.Text">
    <value>Pais:</value>
  </data>
  <data name="plCountry.Help">
    <value>Ingrese el pais</value>
  </data>
  <data name="plRegion.Text">
    <value>Provincia:</value>
  </data>
  <data name="plRegion.Help">
    <value>Ingrese la provincia</value>
  </data>
  <data name="plPostal.Text">
    <value>Codigo postal:</value>
  </data>
  <data name="plPostal.Help">
    <value>Ingrese el codigo postal</value>
  </data>
  <data name="plTelephone.Text">
    <value>Telefono:</value>
  </data>
  <data name="plTelephone.Help">
    <value>Ingrese su numero de telefono.</value>
  </data>
  <data name="plCell.Text">
    <value>Celular:</value>
  </data>
  <data name="plCell.Help">
    <value>Ingrese su numero de celular.</value>
  </data>
  <data name="plName.Text">
    <value>Nombre completo</value>
  </data>
  <data name="plName.Help">
    <value>Ingrese su numero completo.</value>
  </data>
  <data name="lblNoShipping.Text" xml:space="preserve">
    <value>No se especifico una direccion de envio.</value>
  </data>
  <data name="valCell.Text">
    <value>&lt;br&gt;Campo requerido.</value>
  </data>
  <data name="valName.Text">
    <value>&lt;br&gt;Campo requerido.</value>
  </data>
  <data name="valStreet.Text">
    <value>&lt;br&gt;Campo requerido.</value>
  </data>
  <data name="valCity.Text">
    <value>&lt;br&gt;Campo requerido.</value>
  </data>
  <data name="valCountry.Text">
    <value>&lt;br&gt;Campo requerido.</value>
  </data>
  <data name="valRegion.Text">
    <value>&lt;br&gt;Campo requerido.</value>
  </data>
  <data name="valPostal.Text">
    <value>&lt;br&gt;Campo requerido.</value>
  </data>
  <data name="valTelephone.Text">
    <value>&lt;br&gt;Campo requerido.</value>
  </data>
  <data name="ExtraDetail.Text">
    <value>Detalles extra</value>
  </data>
  <data name="lblCheque.Text">
    <value>Pagar por transferencia</value>
  </data>
  <data name="QtyAdjusted.Text">
	<value>Las cantidades se ajustaron para poder enviar la orden con nuestros niveles de invetario.</value>
  </data>
  <data name="Description.Header" xml:space="preserve">
    <value>Descripcion</value>
  </data>
  <data name="Price.Header" xml:space="preserve">
    <value>Precio</value>
  </data>
  <data name="Qty.Header" xml:space="preserve">
    <value>Can</value>
  </data>
  <data name="Total.Header" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="Discount.Header" xml:space="preserve">
    <value>Descuento</value>
  </data>
  <data name="Remove.Header" xml:space="preserve">
    <value>Remover</value>
  </data>
  <data name="lblShipping.Text">
    <value>Flete:</value>
  </data>
  <data name="lblTotals.Text">
    <value>Total:</value>
  </data>
  <data name="lblTax.Text">
    <value>Imp:</value>
  </data>
  <data name="cmdRecalculate.Text">
    <value>Recalcular</value>
  </data>
  <data name="SubjectPayByCheque.Text">
    <value>Pagar por transferencia</value>
  </data>
  <data name="lblBankCard.Text">
    <value>Seleccione la opcion de pago</value>
  </data>
  <data name="valEmail.Text">
    <value>&lt;br&gt;Correo electronico es requerido.</value>
  </data>
  <data name="revEmail.Text">
    <value>&lt;br&gt;Correo electronico invalido.</value>
  </data>
  <data name="plEmail.Text">
    <value>Email</value>
  </data>
  <data name="plEmail.Help">
    <value>Un correo de confirmacion sera enviado a esta cuenta</value>
  </data>
  <data name="chkDefaultEmail.Text">
    <value>Correo default</value>
  </data>
  <data name="plDefaultEmail.Text">
    <value>
    </value>
  </data>
  <data name="plDefaultEmail.Help">
    <value></value>
  </data>
  <data name="chkDefaultAddress.Text">
    <value>Direccion por defecto</value>
  </data>
  <data name="plDefaultAddress.Text">
    <value>
    </value>
  </data>
  <data name="plDefaultAddress.Help">
    <value></value>
  </data>
  <data name="cmdCancelOrder.Text">
    <value>Cancelar Orden</value>
  </data>
  <data name="lblEstShipDate.Text">
    <value>Fecha estimada de envio : [TAG:ESTIMATEDDATE]</value>
  </data>
  <data name="lblDiscount.Text">
    <value>Descuento:</value>
  </data>
  <data name="lblAfterDiscount.Text">
    <value>Total despues del descuento:</value>
  </data>
  <data name="cmdVAT.Text">
    <value>OK</value>
  </data>
  <data name="cmdContShop.Text">
    <value>Continuar comprando</value>
  </data>
  <data name="chkSaveAddrCookie.Text">
    <value>Guardar direccion en esta computadora.</value>
  </data>
  <data name="plSaveAddrCookie.Text">
    <value>
    </value>
  </data>
  <data name="plSaveAddrCookie.Help">
    <value></value>
  </data>
</root>